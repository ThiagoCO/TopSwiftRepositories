//
//  ListPullRequestInteractor.swift
//  TopSwiftRepositories
//
//  Created by Thiago Cavalcante De Oliveira on 21/07/20.
//  Copyright (c) 2020 Thiago Cavalcante De Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
// This tag below is used to create the testable files from the Cuckoo pod
// CUCKOO_TESTABLE

import UIKit

protocol ListPullRequestBusinessLogic {
    func getPullRequest()
    func getRepositoryName() -> String?
}

protocol ListPullRequestDataStore {
    var selectedRepository: TopListRepositoriesModel.Repository? { get set }
}

class ListPullRequestInteractor: ListPullRequestBusinessLogic, ListPullRequestDataStore {
    
    var presenter: ListPullRequestPresentationLogic?
    var worker: ListPullRequestNetworkLogic
    var selectedRepository: TopListRepositoriesModel.Repository?

    init(worker: ListPullRequestNetworkLogic = ListPullRequestWorker()) {
        self.worker = worker
    }
    
    func getPullRequest() {
        guard let selectedRepository = selectedRepository else {
            self.presenter?.presentError(title: String.titleAlertError, subtitle: String.subTitleAlertError)
            return
        }
        presenter?.presentScreenLoading()
        worker.getPullsRequests(request: ListPullRequest.Request(repository: selectedRepository))
            .done(handleSuccess)
            .catch(handleError)
            .finally { self.presenter?.hideScreenLoading() }
    }
    
    func handleSuccess(response: [ListPullRequest.PullRequest]) {
        let resp = ListPullRequest.Response(pullRequests: response)
        (resp.pullRequests.count == 0)
            ? presenter?.presentError(title: "O repositorio " + (getRepositoryName() ?? ""), subtitle: "NÃ£o possui nenhum pull request aberto.")
            : presenter?.presentPullRequests(pullRequests: resp)
    }
    
    func handleError(error: Error) {
        self.presenter?.presentError(title: String.titleAlertError, subtitle: String.subTitleAlertError)
    }
    
    func getRepositoryName() -> String? {
        return selectedRepository?.name.capitalized
    }
}
